<?php

/**
 * @file
 * Contains blackbox.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function blackbox_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the blackbox module.
    case 'help.page.blackbox':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('A simple block containing an entity of your choice which appears after a certain time.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function blackbox_theme() {
  return [
    'blackbox' => [
      'render element' => 'children',
      '#attached' => array(
        'library' => array(
          'blackbox/blackbox-lib',
        ),
      ),
    ],
  ];
}

/**
 * Implements hook_block_info().
 */
function blackbox_block_info() {
  $blocks['blackbox'] = array(
    'info' => t('Blackbox block'),
    'region' => 'content',
    'status' => 1,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED //Shows this block on every page except the listed pages.
  );
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function blackbox_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'blackbox':
      $block['subject'] = '<none>';
      // @FIXME
      // theme() has been renamed to _theme() and should NEVER be called directly.
      // Calling _theme() directly can alter the expected output and potentially
      // introduce security issues (see https://www.drupal.org/node/2195739). You
      // should use renderable arrays instead.
      //
      //
      // @see https://www.drupal.org/node/2195739
      // $block['content'] = theme('blackbox_template', array('title' => '', 'contents' => ''));

      break;
  }
  return $block;
}

/**
 * Implements hook_block_view_alter().
 */
function blackbox_block_view_alter(&$data, $block) {
  if (!empty($block->title) && $block->title == t('Blackbox block')) {
    $block->title = '<none>';
  }
}

/**
 * Implements hook_init().
 *
 * Init session variables and js
 * @global type $user
 */
function blackbox_init() {
  $user = \Drupal::currentUser();
  if (!isset($_SESSION)) {
    drupal_session_start();
  }

  // @FIXME
  // // @FIXME
  // // This looks like another module's variable. You'll need to rewrite this call
  // // to ensure that it uses the correct configuration object.
  // $values = (variable_get('blackbox')) ? variable_get('blackbox') : NULL;

  if ($user->uid == 0 && !empty($values)) {
    $str_time = time();
    $show_time = $str_time + $values['hours'] * 60 * 60 + $values['minutes'] * 60 + $values['seconds'];
    $current_nid = (arg(0) == 'node' && is_numeric(arg(1))) ? arg(1) : '';
    if (!isset($_SESSION['blackbox'])) { // if session exists, don't LOOP (popup may have already appeared)
      $_SESSION['blackbox'] = array(
        'start' => $str_time,
        'show_time' => $show_time,
        'content' => $values['content'] = ($current_nid != $values['content']) ? $values['content'] : NULL,
        'width' => $values['width'],
        'height' => $values['height'],
        'show_link' => $values['show_link']
      );
    }
    else {
      $_SESSION['blackbox']['start'] = $str_time;
      $_SESSION['blackbox']['show_time'] = $show_time;
      $_SESSION['blackbox']['content'] = $values['content'] = ($current_nid != $values['content']) ? $values['content'] : NULL;
      $_SESSION['blackbox']['width'] = $values['width'];
      $_SESSION['blackbox']['height'] = $values['height'];
      $_SESSION['blackbox']['show_link'] = $values['show_link'];
    }
    // @FIXME
    // The Assets API has totally changed. CSS, JavaScript, and libraries are now
    // attached directly to render arrays using the #attached property.
    //
    //
    // @see https://www.drupal.org/node/2169605
    // @see https://www.drupal.org/node/2408597
    // drupal_add_js(array('blackbox' => array('start' => $str_time, 'showTime' => $show_time)), 'setting');

  }
}
